```javascript
const url = new URL(
    "{{ baseUrl }}{{ endpoint.boundUri }}"
);
<% if  (utils.isNonEmptyObject(endpoint.cleanQueryParameters)) { %>

let params = {{{ printQueryParamsAsKeyValue endpoint.cleanQueryParameters }}};
Object.keys(params)
    .forEach(key => url.searchParams.append(key, params[key]));
{{/if}}

<% if  (utils.isNonEmptyObject(endpoint.headers)) { %>
let headers = {
{{#each endpoint.headers}}
    "{{@key}}": "{{this}}",
{{/each}}
{{#unless endpoint.headers.Accept }}
    "Accept": "application/json",
{{/unless}}
};
{{/if}}

<% if  (utils.isNonEmptyObject(endpoint.fileParameters)) { %>
const body = new FormData();
{{#each endpoint.cleanBodyParameters}}
{{#each (getParameterNamesAndValuesForFormData @key this) }}
body.append('{{{ @key }}}', '{{{ this }}}');
{{/each}}
{{/each}}
{{#each endpoint.fileParameters }}
{{#each (getParameterNamesAndValuesForFormData @key this) }}
body.append('{{{ @key }}}', document.querySelector('input[name="{{{ @key }}}"]').files[0]);
{{/each}}
{{/each}}
{{else if  (utils.isNonEmptyObject endpoint.cleanBodyParameters) }}
let body = {{{ JSONstringify endpoint.cleanBodyParameters 4 }}}
{{/if}}

fetch(url, {
    method: "{{endpoint.methods.[0]}}",
<% if  (utils.isNonEmptyObject(endpoint.headers)) { %>
    headers: headers,
{{/if}}
<% if  (utils.isNonEmptyObject(endpoint.fileParameters)) { %>
    body,
{{else if  (utils.isNonEmptyObject endpoint.cleanBodyParameters) }}
    body: JSON.stringify(body),
{{/if}}
})
.then(response => response.json())
.then(json => console.log(json));
```